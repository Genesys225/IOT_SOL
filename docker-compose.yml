version: '3.7'
services:
    mysql:
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        ports:
            - 3306:3306
        cap_add:
            - SYS_NICE # CAP_SYS_NICE
        volumes:
            - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
            - ./tmp/mysql/:/var/lib/mysql
        restart: always
        environment:
            - TZ=Asia/Jerusalem
            - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_HOST=127.0.0.1


    grafana:
        image: grafana/grafana:latest
        ports:
            - '3000:3000'
        volumes:
            - ./tmp/grafana/:/var/lib/grafana
            - ./tmp/grafana-provisioning/:/etc/grafana/provisioning
            - ./tmp/config/grafana.ini:/etc/grafana/grafana.ini:z
            - ./tmp/config/dashboards:/var/lib/grafana/dashboards
            - ./tmp/config/datasources:/etc/grafana/datasources
            - ./tmp/config/plugins:/var/lib/grafana/plugins
        depends_on:
            - mysql
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
            - GF_RENDERING_SERVER_URL=http://renderer:8081/render
            - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
            - GF_LOG_FILTERS=rendering:debug

    emqtt:
        image: raymondmm/emqtt
        ports:
            - '1883:1883'
            - '8083:8083'
            - '8084:8084'
            - '18083:18083'
        environment:
            - TZ=Asia/Jerusalem
            - 'EMQ_NAME=emq'
            - 'EMQ_NODE__COOKIE=ef16498f66804df1cc6172f6996d5492'
            - 'EMQ_WAIT_TIME=60'

    frontend:
        stdin_open: true
        image: node:12-alpine
        entrypoint:
            [
                'ash',
                '-c',
                'cd /app/ && ls -la && yarn && PORT=9000 yarn start && sleep 10',
            ]
        volumes:
            - ./microservices/control-panel-frontend/:/app/
        ports:
            - '9000:9000'
        restart: always

    nats:
        image: nats
        ports:
            - '4222:4222'
            - '6222:6222'
            - '8222:8222'
    # grabber:
    #     image: hayd/alpine-deno:1.3.0
    #     ports:
    #         - '3330:3330'
    #     command: /bin/sh -c "apk add yarn;yarn global add nodemon;sleep 10 ; cd /app/ && nodemon --exec 'deno run --unstable --allow-net --allow-write --allow-read --allow-plugin --allow-all /app/main.js'"
    #     volumes:
    #         - ./microservices/graber/:/app/
    #         - $PWD/tmp/.deno:/deno-dir/
    #     depends_on:
    #         - grafana
    #         - emqtt
    #         - mysql
    #         - microservices
    #     restart: always

    web:
        image: nginx
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
        volumes:
            - "./router/${ENV_MODE}.nginx.conf:/etc/nginx/nginx.conf"
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/local_cert:/etc/local
            - ./data/certbot/www:/var/www/certbot
        ports:
            - '80:80'
            - '443:443'
        depends_on:
            - microservices
            - grafana
            - frontend
            - mysql
        links:
            - microservices:microservices
            - grafana:grafana
            - frontend:frontend
            - code-server:code-server
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - NGINX_PORT=80

    certbot:
        image: certbot/certbot
        entrypoint: ${CERT_BOT_ENTRY}
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot

    microservices:
        image: hayd/alpine-deno:1.3.0
        volumes:
            - ./microservices:/app/
            - ./tmp/deno/:/deno-dir/
        ports:
            - '6000:6000'
        depends_on:
            - grafana
            - emqtt
            - mysql
        links:
            - emqtt:emqtt-broker
            - mysql:mysql
        environment:
            - GRAPHANA_API_KEY=Bearer ${GRAFANA_API_KEY}
            - TZ=Asia/Jerusalem
        command:
            [
                'ash',
                '-c',
                'apk add nodejs npm;npm install pm2 yarn -g && cd /app/ && yarn install --production && pm2 start && pm2 logs -f',
            ]
            
    renderer:
        image: grafana/grafana-image-renderer:latest
        ports:
            - 8081

    code-server:
        image: ghcr.io/linuxserver/code-server
        environment:
            - PUID=$USER
            - PGID=$USER
            - TZ=Asia/Jerusalem
            - PASSWORD=Fuck_sett1ng_pa55w0rds #optional
            # - HASHED_PASSWORD= #optional
            - SUDO_PASSWORD=password #optional
            # - SUDO_PASSWORD_HASH= #optional
            - PROXY_DOMAIN=localhost #optional
        volumes:
            - ./:/app/
        restart: unless-stopped